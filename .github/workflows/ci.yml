name: CI

on: push

permissions:
  contents: read

jobs:
  linters_and_tests:
    name: Linters and tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v3

      - name: "Elixir: setup"
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: "Elixir: restore dependencies cache"
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: "Node: setup and restore dependencies cache"
        uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: npm
          cache-dependency-path: assets/package-lock.json

      - name: "Elixir: install dependencies"
        run: mix deps.get

      - name: "Node: install dependencies"
        run: npm ci
        working-directory: ./assets

      - name: "Elixir: compile the code"
        run: mix compile

      - name: "Elixir: check formatting"
        run: mix format --check-formatted

      - name: "Node: check code issues (ESLint)"
        run: npm run eslint:check
        working-directory: ./assets

      - name: "Node: check formatting (Prettier)"
        run: npm run prettier:check
        working-directory: ./assets

      - name: "Elixir: run tests"
        run: mix test

      - name: "Node: run tests"
        run: npm test
        working-directory: ./assets
